<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd">
    <changeSet id="add-user-credentials" author="anon">
        <validCheckSum>ANY</validCheckSum>
        <preConditions onFail="MARK_RAN">
            <not>
                <tableExists tableName="user_credentials"/>
            </not>
        </preConditions>
        <createTable tableName="user_credentials">
            <column name="username" type="${varchar_type}">
                <constraints nullable="false" foreignKeyName="uc_u_fk" referencedTableName="user" referencedColumnNames="username" deleteCascade="true" />
            </column>
            <column name="app_username" type="${varchar_type}">
                <constraints nullable="false" />
            </column>
            <column name="credential" type="${varchar_type}">
                <constraints nullable="false" />
            </column>
            <column name="encoder" type="${varchar_type}">
                <constraints nullable="false" />
            </column>
            <column name="app" type="${varchar_type}">
                <constraints nullable="false" />
            </column>
            <column name="created" type="datetime" defaultValueComputed="current_timestamp">
                <constraints nullable="false" />
            </column>
            <column name="updated" type="datetime" defaultValueComputed="current_timestamp">
                <constraints nullable="false" />
            </column>
            <column name="expiration" type="datetime" />
            <column name="comment" type="${varchar_type}" />
        </createTable>
        <sql>insert into user_credentials (username, app_username, credential, encoder, app, comment)
             select u.username, u.username,
               case when u.password like 'enc:%' then substr(u.password, 5, length(u.password) - 4) else u.password end,
               case when u.password like 'enc:%' then 'legacyhex' else 'legacynoop' end,
               'AIRSONIC', 'Initial legacy migration'
             from ${userTableQuote}user${userTableQuote} u
        </sql>
        <sql>insert into user_credentials (username, app_username, credential, encoder, app, comment)
             select u.username, u.last_fm_username,
               case when u.last_fm_password like 'enc:%' then substr(u.last_fm_password, 5, length(u.last_fm_password) - 4) else u.last_fm_password end,
               case when u.last_fm_password like 'enc:%' then 'legacyhex' else 'legacynoop' end,
               'LASTFM', 'Initial legacy migration'
             from user_settings u
             where u.last_fm_username is not null and u.last_fm_password is not null
        </sql>
        <sql>insert into user_credentials (username, app_username, credential, encoder, app, comment)
             select u.username, u.username,
               case when u.listenbrainz_token like 'enc:%' then substr(u.listenbrainz_token, 5, length(u.listenbrainz_token) - 4) else u.listenbrainz_token end,
               case when u.listenbrainz_token like 'enc:%' then 'legacyhex' else 'legacynoop' end,
               'LISTENBRAINZ', 'Initial legacy migration'
             from user_settings u
             where u.listenbrainz_token is not null
        </sql>
        <rollback>
            <dropTable tableName="user_credentials"/>
        </rollback>
    </changeSet>
    <changeSet id="trim-user-credentials-encoder" author="anon">
        <sql>
            update user_credentials set encoder = trim( encoder )
        </sql>
        <rollback>
        </rollback>
    </changeSet>
</databaseChangeLog>
